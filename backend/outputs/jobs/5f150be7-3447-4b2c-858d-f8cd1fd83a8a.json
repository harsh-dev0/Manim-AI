{"status": "completed", "created_at": 1747238718.8679261, "prompt": "Binary Search", "code": "# Binary Search Animation\n\nfrom manim import *\n\nclass BinarySearchAnimation(Scene):\n    def construct(self):\n        # Create a sorted list of numbers\n        numbers = [2, 4, 7, 9, 11, 14, 16, 18, 20, 23]\n        \n        # Display the list of numbers\n        number_list = Text(str(numbers), font_size=24).to_edge(UP)\n        self.play(Write(number_list))\n        \n        # Prompt for the target number\n        prompt = Text(\"Enter the target number: \", font_size=24).next_to(number_list, DOWN)\n        self.play(Write(prompt))\n        \n        # Simulate user input for the target number\n        target_number = 14\n        user_input = Text(str(target_number), font_size=24).next_to(prompt, RIGHT)\n        self.play(Write(user_input))\n        \n        # Perform binary search animation\n        left = 0\n        right = len(numbers) - 1\n        \n        while left <= right:\n            mid = (left + right) // 2\n            \n            # Highlight the current middle element\n            highlight = SurroundingRectangle(number_list[0][mid*3:mid*3+2], color=YELLOW)\n            self.play(Create(highlight))\n            \n            if numbers[mid] == target_number:\n                # Target number found\n                result = Text(f\"Number {target_number} found at index {mid}\", font_size=24).next_to(user_input, DOWN)\n                self.play(Write(result))\n                break\n            elif numbers[mid] < target_number:\n                # Target number is in the right half\n                left = mid + 1\n                self.play(highlight.animate.shift(RIGHT * 3))\n            else:\n                # Target number is in the left half\n                right = mid - 1\n                self.play(highlight.animate.shift(LEFT * 3))\n            \n            self.play(FadeOut(highlight))\n        \n        if left > right:\n            # Target number not found\n            result = Text(f\"Number {target_number} not found\", font_size=24).next_to(user_input, DOWN)\n            self.play(Write(result))\n        \n        self.wait(2)", "title": "Binary Search Animation", "video_url": "/media/5f150be7-3447-4b2c-858d-f8cd1fd83a8a.mp4"}